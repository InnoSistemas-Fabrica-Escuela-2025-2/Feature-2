spring.application.name=innosistemas

# Server configuration
server.port=${PORT:8080}

# Database configuration - Using environment variables
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://ep-round-rain-ado66wet-pooler.us-east-1.aws.neon.tech/neondb?sslmode=require}
spring.datasource.username=${DB_USERNAME:neondb_owner}
spring.datasource.password=${DB_PASSWORD:npg_NilC90RWPxTz}
spring.datasource.driverClassName=org.postgresql.Driver

# JPA/Hibernate configuration
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Connection pool configuration for production
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# Logging configuration
logging.level.root=INFO
logging.level.com.udea.innosistemas=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=INFO
logging.level.com.zaxxer.hikari=DEBUG

# JSON configuration
spring.jackson.serialization.indent_output=false

# SQL initialization
spring.sql.init.mode=never
spring.jpa.defer-datasource-initialization=false

# CORS configuration - allow production frontend URL
cors.allowed.origins=${CORS_ALLOWED_ORIGINS:http://localhost:5173}

# Health check endpoint
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always
